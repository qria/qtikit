{"version":3,"file":"main.401e63465ed80e5939ba.hot-update.js","sources":["webpack:///./src/html/index.ts","webpack:///./src/html/types.ts"],"sourcesContent":["import React from \"react\";\n\nimport createImageComponent from \"./image\";\nimport { getAttributes } from \"./types\";\n\n// class HTMLComponent extends React.Component<{ children: React.ReactNode }> {\n//   render() {\n//     return <img {...getAttributes(this.props.el)} />;\n//   }\n// }\n\nexport function createHTMLComponent(\n  node: Element,\n  children: React.ReactElement[]\n): React.ReactElement {\n  // if (node.nodeName === \"img\") {\n  //   return createImageComponent(node);\n  // }\n\n  return React.createElement(\n    node.nodeName,\n    ...getAttributes(node),\n    ...children\n  );\n\n  // return React.cloneElement(children[0], {\n  //   ...getAttributes(node),\n  //   children: children.slice(1),\n  // });\n}\n","interface Attributes {\n  [key: string]: string | number | boolean | undefined;\n}\n\nexport function getAttributes(el: Element): Attributes {\n  const attributes: Attributes = {};\n  for (let i = 0; i < el.attributes.length; i++) {\n    const attr = el.attributes[i];\n    attributes[attr.name] = attr.value;\n  }\n\n  return attributes;\n}\n\n// export function createElement(\n//   tagName: string,\n//   attributes: Attribute[],\n//   children: string[]\n// ): string {\n//   let result = `<${tagName}`;\n//   for (let i = 0; i < attributes.length; i++) {\n//     const attribute = attributes[i];\n//     result += ` ${attribute.name}=\"${attribute.value}\"`;\n//   }\n//   result += \">\";\n//   for (let i = 0; i < children.length; i++) {\n//     result += children[i];\n//   }\n//   result += `</${tagName}>`;\n//   return result;\n// }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}