{"version":3,"file":"main.cef2a7c5b539eb95e49c.hot-update.js","sources":["webpack:///./src/html/image.tsx","webpack:///./src/html/types.ts"],"sourcesContent":["import React from \"react\";\n\nimport { getAttributes } from \"./types\";\n\nclass Image extends React.Component<{ el: Element }> {\n  // TODO: placeholder\n  render() {\n    // const [src, alt, ...attrs] = this.props.el.attributes;\n    // NamedNodeMap to destructable array\n    console.log(\"attrs\", this.props.el.attributes.item(0));\n    return <img {...getAttributes(this.props.el)} />;\n    // return <img src={this.props.el.getAttribute(\"src\") || \"\"} />;\n  }\n}\n\nexport default function create(el: Element) {\n  return <Image el={el} />;\n}\n","interface Attribute {\n  name: string;\n  value: string;\n}\n\nexport function getAttributes(el: HTMLElement): Attribute[] {\n  const attributes: Attribute[] = [];\n  for (let i = 0; i < el.attributes.length; i++) {\n    const attr = el.attributes[i];\n    attributes.push({\n      name: attr.name,\n      value: attr.value,\n    });\n  }\n\n  return attributes;\n}\n\nexport function createElement(\n  tagName: string,\n  attributes: Attribute[],\n  children: string[]\n): string {\n  let result = `<${tagName}`;\n  for (let i = 0; i < attributes.length; i++) {\n    const attribute = attributes[i];\n    result += ` ${attribute.name}=\"${attribute.value}\"`;\n  }\n  result += \">\";\n  for (let i = 0; i < children.length; i++) {\n    result += children[i];\n  }\n  result += `</${tagName}>`;\n  return result;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AARA;AACA;AAUA;AACA;AAAA;AAAA;AACA;AAFA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;A","sourceRoot":""}